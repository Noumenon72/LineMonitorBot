{"name":"LineMonitorBot","tagline":"Taking the math out of line monitoring","body":"# LineMonitorBot\r\nEnterprise productivity app for use in a plastics extrusion plant. \r\n\r\n[See how it works](https://play.google.com/store/apps/details?id=com.kovaciny.linemonitorbot) on the Play Store.\r\n\r\n## Bug reporting\r\n[See bug status]( https://bitbucket.org/Noumenon72/linemonitorbot/issues?status=new&status=open&sort=-priority) at bitbucket.org.\r\n\r\n## Design notes\r\nThis app grew up from a very basic MIT App Inventor product to something I used all day at work. I also shared it with my coworkers, so UI hints, easy touch targets, and responsiveness were important.\r\n\r\nThe 19 domain model classes are in `src/primexmodel/` along with `PrimexModel.java` which contains most of the business logic. The 28 fragments and activities in `src/linemonitorbot/` are mainly controlled by `MainActivity.java`, though a few implement ViewEventResponder and update themselves when there are property changes in the model.\r\n\r\nThe unit tests have some repetition because I hadn't discovered parameterization yet, and many of them test using the UI which makes them kind of fragile, but they work. They catch the kind of bugs that tend to crop up.","google":"UA-70664123-1","note":"Don't delete this file! It's used internally to help with page regeneration."}